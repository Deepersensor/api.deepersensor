version: "3.9"
services:
  api:
    build:
      context: .
      dockerfile: crates/api/Dockerfile
    image: deepersensor/api:dev
    env_file:
      - ./.env
    environment:
      - APP_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/deepersensor
    expose:
      - "8080"
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O /dev/null http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
    depends_on:
      - postgres
      - redis
      - ollama
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=deepersensor
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no", "--requirepass", "${REDIS_PASSWORD:-changeme}" ]
    expose:
      - "6379"
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    volumes:
      - ollama_models:/root/.ollama
    expose:
      - "11434"
    restart: unless-stopped

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    image: deepersensor/nginx:dev
    depends_on:
      - api
    ports:
      - "80:80"
    restart: unless-stopped
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx

volumes:
  postgres_data: {}
  ollama_models: {}
