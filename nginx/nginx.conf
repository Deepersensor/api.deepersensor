worker_processes auto;
error_log /var/log/nginx/error.log warn;

events { worker_connections 1024; }

http {
  log_format main '{"time":"$time_iso8601","remote_addr":"$remote_addr","request":"$request","status":$status,"body_bytes_sent":$body_bytes_sent,"referer":"$http_referer","user_agent":"$http_user_agent","req_id":"$http_x_request_id"}';
  access_log /var/log/nginx/access.log main;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 4096;

  map $http_upgrade $connection_upgrade { default upgrade; '' close; }

  # Basic rate limit (per IP)
  limit_req_zone $binary_remote_addr zone=api_rl:10m rate=60r/m;

  server {
    listen 80 default_server;
    server_name _;

    # Security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy no-referrer-when-downgrade always;
    add_header Content-Security-Policy "default-src 'none'; connect-src 'self';";

    # Compression (if enabled in image defaults)
    gzip on;
    gzip_types application/json text/plain text/css application/javascript;

    # Health
    location = /health { return 200 'ok'; }

    location /api/ {
      limit_req zone=api_rl burst=20 nodelay;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-Id $request_id;
      proxy_pass http://api_backend/;
    }
  }

  upstream api_backend {
    server api:8080;
    keepalive 32;
  }
}
